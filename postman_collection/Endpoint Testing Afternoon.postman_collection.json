{
	"info": {
		"_postman_id": "7659f3f4-ceeb-46fa-8d35-39f8597f14af",
		"name": "Endpoint Testing Afternoon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET - All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ba4473-34ff-44bb-97f9-9a509864ee5f",
						"type": "text/javascript",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(`Data returned is an array`, () => {",
							"    pm.expect(Array.isArray(responseJSON)).to.eql(true);",
							"})",
							"pm.test(`Data returned has length of 100`, () => {",
							"    pm.expect(responseJSON.length).to.eql(100)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac5d4486-35e1-4b4d-a248-8b74c29f91b1",
						"type": "text/javascript",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"const expected = {",
							"  id: 9,",
							"  first_name: \"Tatum\",",
							"  last_name: \"Vell\",",
							"  email: \"tvell8@wisc.edu\",",
							"  city: \"Youngstown\",",
							"  state: \"Ohio\",",
							"  phone: \"(330) 6802507\"",
							"};",
							"",
							"pm.test(`Response is OK`, () => {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(`Response data is array with length of 1`, () => {",
							"    pm.expect(Array.isArray(responseJSON)).to.eql(true);",
							"    pm.expect(responseJSON.length).to.eql(1)",
							"})",
							"",
							"pm.test(`returned data is expected`, () => {",
							"    pm.expect(responseJSON[0]).to.eql(expected)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3535/api/users/9",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User by ID ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d48f588-2d70-409f-a6fa-7fa232754e56",
						"type": "text/javascript",
						"exec": [
							"const expected = 'User id sent must be a number'",
							"",
							"pm.test(`response has status 400`, () => {",
							"    pm.response.to.have.status(400)",
							"})",
							"",
							"pm.test(`error message expected`, () => {",
							"    pm.expect(pm.response.text()).to.eql(expected)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3535/api/users/id",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User with Query",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eea788cc-408d-4779-84aa-1f08e0ede73d",
						"type": "text/javascript",
						"exec": [
							"const responseJSON = pm.response.json();",
							"",
							"pm.test(`Status code is 200`, () => {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(`data has length > 0`, () => {",
							"    pm.expect(responseJSON.length > 0).to.eql(true)",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users?firstName=t",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "firstName",
							"value": "t"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - User with Query ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "28d64a0a-8b6c-4420-a5f8-f7e32b7973ea",
						"type": "text/javascript",
						"exec": [
							"pm.test(`has status code 400`, () => {",
							"    pm.response.to.have.status(400)",
							"})",
							"",
							"pm.test(`returned error is expected`, () => {",
							"    pm.expect(pm.response.text()).to.eql(\"Improper query sent in request: citty=new york\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3535/api/users?citty=new york",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "citty",
							"value": "new york"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - Update user by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "adfb0e75-6aba-405d-8563-1dea76898632",
						"type": "text/javascript",
						"exec": [
							"const responseJSON = pm.response.json();",
							"const user = responseJSON[0];",
							"",
							"pm.test('status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Returned data is an Array with a length of 1\", function () {",
							"  pm.expect( Array.isArray( responseJSON ) ).to.eql( true );",
							"  pm.expect( responseJSON.length ).to.eql( 1 );",
							"});",
							"",
							"",
							"pm.test(\"Returned email is 'garey@ilovecode.com'\", function () {",
							"  pm.expect( user.email ).to.eql( \"garey@ilovecode.com\" );",
							"});",
							"",
							"pm.test(\"Returned city is 'Pittsburg'\", function () {",
							"  pm.expect( user.city ).to.eql( \"Pittsburg\" );",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/23",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - Update user by ID ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfa9bb4b-a353-48a9-8e61-df58b0a8e13c",
						"type": "text/javascript",
						"exec": [
							"pm.test('status of 400', () => {",
							"    pm.response.to.have.status(400)",
							"})",
							"",
							"pm.test(`error message is expected`, () => {",
							"    pm.expect(pm.response.text()).to.eql(\"Error with user ID in request.\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/userId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"userId"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be307da6-e35b-43a9-9459-599a36ac815a",
						"type": "text/javascript",
						"exec": [
							"",
							"const responseJSON = pm.response.json();",
							"",
							"const user = responseJSON[0];",
							"",
							"const expectedUser = {",
							"  id: user.id,",
							"  first_name: \"Bruce\",",
							"  last_name: \"Wayne\",",
							"  email: \"bruce@scarybat.com\",",
							"  city: \"Gotham\",",
							"  state: \"New Jersey\",",
							"  phone: \"(856) 6044252\"",
							"};",
							"",
							"pm.test(`status code is 200`, () => {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(`returned data is array with length of 1`, () => {",
							"    pm.expect(Array.isArray(responseJSON)).to.eql(true)",
							"    pm.expect(responseJSON.length).to.eql(1)",
							"})",
							"",
							"pm.test(\"Returned user is expected\", function () {",
							"  pm.expect( user ).to.eql( expectedUser );",
							"});",
							"",
							"pm.test(\"Returned user id is a number\", function () {",
							"  pm.expect( typeof( user.id ) ).to.eql('number'); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Create user ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed7ea6a4-dc3f-4660-b768-81a603d2e8cb",
						"type": "text/javascript",
						"exec": [
							"pm.test(`status code 400`, () => {",
							"    pm.response.to.have.status(400)",
							"})",
							"",
							"pm.test(`error is expected`, () => {",
							"    pm.expect(pm.response.text()).to.eql(\"All needed user info was not sent in the body of request.\")",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remove user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6d9e7db-aa11-488d-97af-3f10ccacdb5c",
						"type": "text/javascript",
						"exec": [
							"// const user = pm.response.json()[0];",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status( 200 );",
							"});",
							"",
							"// pm.test(\"Returned user ID is equal to 66\", function () {",
							"//   pm.expect( user.id ).to.eql( 66 );",
							"// });"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\t\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/66",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"66"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - Remove user ( error )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49d43091-e691-49f2-9298-049380d13898",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status( 404 );",
							"});",
							"",
							"pm.test(\"Returned error message is expected\", function () {",
							"  pm.expect( pm.response.text() ).to.eql(\"No user with an ID of 508.\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
				},
				"url": {
					"raw": "http://localhost:3535/api/users/508",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3535",
					"path": [
						"api",
						"users",
						"508"
					]
				}
			},
			"response": []
		}
	]
}